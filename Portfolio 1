# Lab Notebook

- **Student Name: Siham Bashir Ali
- **Student ID: ALI22603020
- **Lab:** (lab)
- **Date:** (date)

## Introduction

Describe the aim of this lab.

## Agreed scope

Summarise the agreed scope.

## Activity

You might like to include:

- Key points from your scope agreement and how you prepared it.
- What you did.
- What tools you used and why.
- The commands you ran and their ouput, for example:

```command
sudo nmap -sS -T4 -A -v 127.0.0.1
```

```command
Starting Nmap 7.80 ( https://nmap.org ) at 2023-10-02 11:35 BST
NSE: Loaded 151 scripts for scanning.
NSE: Script Pre-scanning
...
Nmap scan report for localhost (127.0.0.1)
Host is up (0.0000070s latency).
All 1000 scanned ports on localhost (127.0.0.1) are closed
Too many fingerprints match this host to give specific OS details
...
Nmap done: 1 IP address (1 host up) scanned in 1.83 seconds
           Raw packets sent: 1012 (45.668KB) | Rcvd: 2022 (86.616KB)
```

- What did you learn about the environment from the command(s)?
- What could you do next to further explore the environment?

## Conclusion

Summarise the lab.

- What did you do?
- What did you learn?
- What were your results?
- What did you take away from the lab?

Requirement 1. Setup your security testing environment 

Deploy OWASP Juice Shop virtual machine. 
Use Case: OWASP Juice Shop server 
CPUs: 2 
RAM: 2 GB 
Operating System: Ubuntu 22.04 
Network Adaptor 1: NAT 
Network Adaptor 2: 192.168.123.1 (Internal Network) 
Source: Pre-built, cloned, or ISO 
Install: Node.js version 16, npm, git 
Source for OWASP Juice Shop: git clone https://github.com/juice-shop/juice-shop.git â€“depth 1 
Credentials: User: student, Password: Student1 
Deploy Kali Linux (or ParrotOS) virtual machine for security testing. 

  Use Case: Security Testing workstation 
CPUs: 2 
RAM: 4 GB 
Operating System: Kali Linux 
Network Adaptor 1: NAT 
Network Adaptor 2: 192.168.123.10 (Internal Network) 
Source: Pre-built, cloned, or ISO 
Credentials: User: kali, Password: kali 
Configure virtual machines with specified specifications. 
OWASP Juice Shop: 2 CPUs, 2 GB RAM, Ubuntu 22.04, NAT, Internal Network, NodeJS, npm, git. 
Security Testing Workstation: 2 CPUs, 4 GB RAM, Kali Linux, NAT, Internal Network. 

Requirement 2. OWASP Juice Shop Functionality Testing

  FEATURE             |      DESCRIPTION                                                                                 |      INPUTS                          |      OUTPUTS                       |     EXPECTED BEHAVIOUR                                                                       |
|---------------------|--------------------------------------------------------------------------------------------------|--------------------------------------|------------------------------------|----------------------------------------------------------------------------------------------|
| User Registration   | Allows users to create an account on the OWASP Juice Shop.                                       | Username, Email, Password            | Success/Failure messages           | Successful registration redirects to the login page.                                         |
| Login               | Enables users to log in to their accounts.                                                       | Username, Password                   | Success/Failure messages           | Successful login redirects to the user dashboard.                                            |
| Product Listing     | Displays a list of available products for purchase.                                              | N/A                                  | List of products                   | Products are displayed with details and images.                                              |
| Product Details     | Shows detailed information about a selected product.                                             | Click on a product                   | Detailed product information       | Displays details like price, description, etc.                                               |
| Add to Basket       | Allows users to add products to their shopping cart.                                             | Select a product, specify quantity   | Success/Failure messages           | Product is added to the basket.                                                              |
| Your Basket         | Shows the contents of the user's shopping cart.                                                  | N/A                                  | List of items in the cart          | Displays items with quantity and total cost.                                                 |
| Checkout            | Initiates the select an address process from the pre-existing addresses or add new address.      | Confirm the selected address.        | List of existing addresses         | Proceeding successfully redirects to adding a new address or continuing to delivery options. |
| Delivery            | Displays a list of available delivery speed options.                                             | Click on a delivery option           | List of delivery options           | Displays details like price, expected delivery etc                                           |          
| Payment             | Handles payment processing for the user's order.                                                 | Payment details                      | Order confirmation                 | Successful payment redirects to order confirmation.                                          |
| User Profile        | Allows users to view and edit their profile information.                                         | Click on the user profile icon       | User details, Edit options         | Edits are saved, and updated details are displayed.                                          |
| Security Dashboard  | Displays security-related statistics and information.                                            | Access through the menu              | Security metrics, Recent activities| Provides insights into security status.                                                      |



Requirement 3. Exploit a Cross-Site Scripting vulnerability

API-only XSS 

Perform a persisted XSS attack with <iframe src="javascript:alert(`xss)">`  by running it in the API. 

